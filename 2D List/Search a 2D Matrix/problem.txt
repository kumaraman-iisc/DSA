Description:
You are given an m x n integer matrix matrix with the following two properties:

Each row is sorted in non-decreasing order.

The first integer of each row is greater than the last integer of the previous row.

Write a function that takes an integer target and returns True if target is in matrix, or False otherwise. You must solve this problem with a time complexity better than O(m * n).



Input Parameters:

matrix (List[List[int]]): A 2D list representing an m x n matrix.

target (int): The target integer to search for in the matrix.

Output:

bool: Return True if the target is found, otherwise return False.



Example:

Input: matrix = [[1, 3, 5, 7], 
                 [10, 11, 16, 20], 
                 [23, 30, 34, 60]], target = 13
Output: False
 
Input: matrix = [[1, 3, 5, 7], 
                 [10, 11, 16, 20], 
                 [23, 30, 34, 60]], target = 3
Output: True
